generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String
  password   String
  bio        String?
  profilePic String?
  createdAt  DateTime   @default(now())
  posts      Post[]
  bookmarks  Bookmark[]
  upvotes    Upvote[]
  comments   Comment[]
}

model Post {
  id                String     @id @default(uuid())
  title             String
  content           String
  imageUrl          String?
  publishedDateTime String     @default("")
  published         Boolean    @default(false)
  author            User       @relation(fields: [authorId], references: [id])
  authorId          String
  bookmarks         Bookmark[]
  upvotes           Upvote[]
  comments          Comment[]
}

model Bookmark {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
}

model Upvote {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
}

model Comment {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
}
